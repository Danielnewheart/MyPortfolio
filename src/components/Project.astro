---
interface Props {
  project: {
    type: string;
    title: string;
    description: string;
    tags: string[];
    layout: string;
  };
}
const { project } = Astro.props;
const layout = `"${project.layout}"`;
let columnLayout = "1fr 1fr";
if (layout === `"image description"`) {
  columnLayout = "6fr 4fr";
} else {
  columnLayout = "4fr 6fr";
}

// make the space of project.title into dash
const projectLink = project.title.replace(/\s/g, "-").toLowerCase();
---

<div class="project-container">
  <a href={projectLink} class="project-image-container">
    <slot />
  </a>
  <div class="project-info-section">
    <a href={projectLink} class="project-description-container">
      <p class="project-type">{project.type}</p>
      <h3 class="project-title">{project.title}</h3>
      <p class="project-description">
        {project.description}
      </p>
    </a>
    <div class="project-tags">
      {project.tags.map((tag) => <span class="project-tag">{tag}</span>)}
    </div>
  </div>

  <style define:vars={{ layout, columnLayout }}>
    .project-image-container {
      position: relative;
      display: block;
      width: 100%;
      overflow: hidden;
      cursor: none;
    }
    .project-info-section {
      margin-top: 1.15rem;
      margin-bottom: 1.72rem;
    }
    .project-description-container {
      display: grid;
      grid-template-rows: auto auto auto;
      cursor: none;
    }
    .project-type {
      font-size: clamp(0.75rem, 2vw, 1rem);
      font-weight: 300;
      text-transform: uppercase;
    }
    .project-title {
      font-size: clamp(2.25rem, 0.5rem + 5vw, 3rem);
      font-weight: 400;
      text-transform: uppercase;
      line-height: 1.1;

      margin-left: -0.1rem;
    }
    .project-description {
      font-size: clamp(1rem, 0.2rem + 2vw, 1.5rem);
      font-weight: 300;

      padding: 0.4rem 0;
    }
    .project-tags {
      display: flex;
      gap: 0.5rem;
      flex-wrap: wrap;

      padding: 0.5rem 0;
    }
    .project-tag {
      display: inline-block;
      padding: 0.1875rem 0.5rem;
      border: 1px solid var(--color-neutral);
      border-radius: 2rem;

      font-size: 0.75rem;
      font-weight: 300;
      text-transform: uppercase;
    }
    /* Middle Version */
    @media (min-width: 40rem) {
      .project-container {
        display: grid;
        grid-template-columns: var(--columnLayout);
        grid-template-areas: var(--layout);
        column-gap: 3rem;

        padding: 1.5rem 0 2.5rem 0;
      }
      .project-image-container {
        align-self: center;
        grid-area: image;
      }
      .project-info-section {
        margin: 0;
        height: 100%;
        align-self: first baseline;
        grid-area: description;

        display: flex;
        flex-direction: column;
      }
      .project-description-container {
        margin: 0;
        height: 100%;
        flex-grow: 2;

        display: flex;
        flex-direction: column;
      }

      .project-tag {
        font-size: 0.8rem;
      }
    }
    /* Large Version */
    @media (min-width: 72rem) {
      .project-tag {
        font-size: 1rem;
      }
      .project-tags {
        justify-content: flex-end;
      }
    }
  </style>
</div>
